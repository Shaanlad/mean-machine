angular.module("app",["ngRoute","ui.router"]),angular.module("app").controller("errorCtrl",["$scope","$rootScope",function(e,t){e.hello="this is from the controller hello",console.log(e.hello)}]),angular.module("app").controller("homeCtrl",["$scope","$http",function(e,t){e.setup=function(){t.get("/api/vehicle").then(function(t){e.model=t.data},function(e){})},e.setup()}]),angular.module("app").controller("loginCtrl",["$scope","auth","$location","$timeout",function(e,t,o,n){e.authFail=!1,e.login=function(o,r){t.login(o,r).then(function(e){t.storeToken(e.data,function(){t.getUser().then(function(e){t.postLoginOps(e.data,function(){t.postLoginRouteHandler()})})})})["catch"](function(t){console.error("Gists error",t.status,t.data),401==t.status&&(e.authFail=!0,n(function(){e.authFail=!1},3e3))})["finally"](function(){console.log("finally finished gists")})}}]),angular.module("app").controller("masterCtrl",["$scope","$rootScope","$route",function(e,t,o){console.log("masterCtrl"),localStorage.getItem("logged_user")&&(t.currentUser=localStorage.getItem("logged_user")),e.$on("login",function(o,n){console.log("Logged In"),e.currentUser=n,t.currentUser=n,localStorage.setItem("logged_user",t.currentUser.username)})}]),angular.module("app").controller("navCtrl",["$scope","auth","$location",function(e,t,o){e.logout=function(){t.logout()}}]),angular.module("app").controller("registerCtrl",["$scope","auth","$location",function(e,t,o){e.register=function(n,r,l){t.register(n,r,l).then(function(n){t.login(r,l),e.$emit("login",n.data),o.path("/home")})["catch"](function(e){console.log(e)})}}]),angular.module("app").config(["$stateProvider","$urlRouterProvider","$locationProvider",function(e,t,o){t.otherwise("/"),e.state("app",{url:"/",views:{header:{templateUrl:"/nav.html",controller:"navCtrl"},content:{templateUrl:"/login.html",controller:"loginCtrl"}}}).state("app.login",{url:"login",views:{header:{templateUrl:"/nav.html",controller:"navCtrl"},content:{templateUrl:"/login.html",controller:"loginCtrl"}}}).state("app.register",{url:"register",views:{"content@":{templateUrl:"register.html",controller:"registerCtrl"}}}).state("app.home",{url:"home",views:{"content@":{templateUrl:"users/home.html",controller:"homeCtrl"}}}).state("app.home.vehicles",{url:"/vehicles/new",views:{"content@":{templateUrl:"vehicles/newVehicle.html",controller:"VehiclesNewInfoCtrl"}}}).state("app.home.details",{url:"/vehicles/:id",views:{"content@":{templateUrl:"vehicles/editVehicle.html",controller:"VehiclesEditInfoCtrl"}}}).state("app.home.map",{url:"/vehicles/map/:id",views:{"content@":{templateUrl:"vehicles/mapVehicle.html",controller:"VehiclesEditMapCtrl"}}}),o.html5Mode(!0)}]),angular.module("app").service("auth",["$http","$window","$location","$rootScope",function(e,t,o,n){function r(){return e.get("api/users")}function l(t,o){return e.post("api/sessions",{username:t,password:o})}function a(t,o,n){return e.post("api/users",{name:t,username:o,password:n})}function i(){localStorage.removeItem("user_token"),localStorage.removeItem("logged_user"),delete e.defaults.headers.common["x-auth"],n.isLogged=!1,n.currentUser=null,o.path("/login")}function s(o,n){t.sessionStorage.user_token=o,localStorage.setItem("user_token",o),e.defaults.headers.common["x-auth"]=t.sessionStorage.user_token,n&&"function"==typeof n&&n()}function u(){}function c(e,t){n.currentUser=e.name,localStorage.setItem("logged_user",n.currentUser),n.isLogged=!0,t&&"function"==typeof t&&t()}function g(){n.intendedRoute?o.path(n.intendedRoute):o.path("/home")}return{getUser:r,login:l,register:a,logout:i,storeToken:s,isLogged:u,postLoginOps:c,postLoginRouteHandler:g}}]),angular.module("app").service("prognitor",["$http","$window","$location","$rootScope",function(e,t,o,n){return{setSetupProcess:function(t){t.loading=!1,t.setup=function(o){t.loading||(t.loading=!0,e.get(t.apiUri,{data:{filters:t.filters,sortings:t.sortings,"with":t["with"],page:t.state.pageNum,_format:"default",_per_page:t.state.perPage,_pagination:t._pagination}}).then(function(e){t.state.lastPage=e.last_page,t.isLastPage=t.state.pageNum==t.state.lastPage,t.loading=!1,void 0!==o&&o(e)},function(e){404==e.status&&n.$broadcast("render404")}))}},run:function(e){this.setSetupProcess(e)}}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImNvbnRyb2xsZXJzL2Vycm9yQ3RybC5qcyIsImNvbnRyb2xsZXJzL2hvbWVDdHJsLmpzIiwiY29udHJvbGxlcnMvbG9naW5DdHJsLmpzIiwiY29udHJvbGxlcnMvbWFzdGVyQ3RybC5qcyIsImNvbnRyb2xsZXJzL25hdkN0cmwuanMiLCJjb250cm9sbGVycy9yZWdpc3RlckN0cmwuanMiLCJjb250cm9sbGVycy9yb3V0ZXMuanMiLCJzZXJ2aWNlcy9hdXRoLmpzIiwic2VydmljZXMvcHJvZ25pdG9yLmpzIl0sIm5hbWVzIjpbImFuZ3VsYXIiLCJtb2R1bGUiLCJjb250cm9sbGVyIiwiJHNjb3BlIiwiJHJvb3RTY29wZSIsImhlbGxvIiwiY29uc29sZSIsImxvZyIsIiRodHRwIiwic2V0dXAiLCJnZXQiLCJ0aGVuIiwicmVzcG9uc2UiLCJtb2RlbCIsImRhdGEiLCJhdXRoIiwiJGxvY2F0aW9uIiwiJHRpbWVvdXQiLCJhdXRoRmFpbCIsImxvZ2luIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInJlcyIsInN0b3JlVG9rZW4iLCJnZXRVc2VyIiwicG9zdExvZ2luT3BzIiwicG9zdExvZ2luUm91dGVIYW5kbGVyIiwiZXJyb3IiLCJzdGF0dXMiLCIkcm91dGUiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiY3VycmVudFVzZXIiLCIkb24iLCJfIiwidXNlciIsInNldEl0ZW0iLCJsb2dvdXQiLCJyZWdpc3RlciIsIm5hbWUiLCIkZW1pdCIsInBhdGgiLCJlcnIiLCJjb25maWciLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIiRsb2NhdGlvblByb3ZpZGVyIiwib3RoZXJ3aXNlIiwic3RhdGUiLCJ1cmwiLCJ2aWV3cyIsImhlYWRlciIsInRlbXBsYXRlVXJsIiwiY29udGVudCIsImNvbnRlbnRAIiwiaHRtbDVNb2RlIiwic2VydmljZSIsIiR3aW5kb3ciLCJwb3N0IiwicmVtb3ZlSXRlbSIsImRlZmF1bHRzIiwiaGVhZGVycyIsImNvbW1vbiIsImlzTG9nZ2VkIiwiY2IiLCJzZXNzaW9uU3RvcmFnZSIsInVzZXJfdG9rZW4iLCJpbnRlbmRlZFJvdXRlIiwic2V0U2V0dXBQcm9jZXNzIiwibG9hZGluZyIsImNhbGxiYWNrRm4iLCJhcGlVcmkiLCJmaWx0ZXJzIiwic29ydGluZ3MiLCJ3aXRoIiwicGFnZSIsInBhZ2VOdW0iLCJfZm9ybWF0IiwiX3Blcl9wYWdlIiwicGVyUGFnZSIsIl9wYWdpbmF0aW9uIiwibGFzdFBhZ2UiLCJsYXN0X3BhZ2UiLCJpc0xhc3RQYWdlIiwidW5kZWZpbmVkIiwiJGJyb2FkY2FzdCIsInJ1biIsInRoaXMiXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFBQyxPQUFBLE9BQ0EsVUFBQSxjQ0RBRCxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsYUFBQSxTQUFBLGFBQUEsU0FBQUMsRUFBQUMsR0FDQUQsRUFBQUUsTUFBQSxvQ0FDQUMsUUFBQUMsSUFBQUosRUFBQUUsVUNIQUwsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLFlBQUEsU0FBQSxRQUFBLFNBQUFDLEVBQUFLLEdBR0FMLEVBQUFNLE1BQUEsV0FFQUQsRUFBQUUsSUFBQSxnQkFDQUMsS0FBQSxTQUFBQyxHQUNBVCxFQUFBVSxNQUFBRCxFQUFBRSxNQUVBLFNBQUFGLE9BT0FULEVBQUFNLFdDakJBVCxRQUFBQyxPQUFBLE9BQ0FDLFdBQUEsYUFBQSxTQUFBLE9BQUEsWUFBQSxXQUFBLFNBQUFDLEVBQUFZLEVBQUFDLEVBQUFDLEdBQ0FkLEVBQUFlLFVBQUEsRUFDQWYsRUFBQWdCLE1BQUEsU0FBQUMsRUFBQUMsR0FDQU4sRUFBQUksTUFBQUMsRUFBQUMsR0FDQVYsS0FBQSxTQUFBVyxHQUNBUCxFQUFBUSxXQUFBRCxFQUFBUixLQUFBLFdBQ0FDLEVBQUFTLFVBQ0FiLEtBQUEsU0FBQVcsR0FDQVAsRUFBQVUsYUFBQUgsRUFBQVIsS0FBQSxXQUNBQyxFQUFBVyxnQ0FOQVgsU0FZQSxTQUFBSCxHQUNBTixRQUFBcUIsTUFBQSxjQUFBZixFQUFBZ0IsT0FB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QUEsRUFDQWUsU0FBQWQsR0FDQUEsRUFBQXhELElBQ0EsU0FBQVEsR0FDQSxLQUFBQSxFQUFBTSxRQUNBeEIsRUFBQWlGLFdBQUEsa0JBUUFDLElBQUEsU0FBQW5GLEdBRUFvRixLQUFBbkIsZ0JBQUFqRSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnYXBwJyxbXG4nbmdSb3V0ZScsJ3VpLnJvdXRlcidcbl0pIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gICAgLmNvbnRyb2xsZXIoJ2Vycm9yQ3RybCcsIGZ1bmN0aW9uKCRzY29wZSwgJHJvb3RTY29wZSkge1xuICAgICAgICAkc2NvcGUuaGVsbG8gPSBcInRoaXMgaXMgZnJvbSB0aGUgY29udHJvbGxlciBoZWxsb1wiXG4gICAgICAgIGNvbnNvbGUubG9nKCRzY29wZS5oZWxsbylcblxuXG5cbiAgICB9KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gICAgLmNvbnRyb2xsZXIoJ2hvbWVDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkaHR0cCkge1xuXG5cbiAgICAgICAgJHNjb3BlLnNldHVwID0gZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgICAgICRodHRwLmdldCgnL2FwaS92ZWhpY2xlJylcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAkc2NvcGUubW9kZWwgPSByZXNwb25zZS5kYXRhO1xuXG4gICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gY2FsbGVkIGFzeW5jaHJvbm91c2x5IGlmIGFuIGVycm9yIG9jY3Vyc1xuICAgICAgICAgICAgICAgICAgICAvLyBvciBzZXJ2ZXIgcmV0dXJucyByZXNwb25zZSB3aXRoIGFuIGVycm9yIHN0YXR1cy5cbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICB9XG5cbiAgICAgICAgJHNjb3BlLnNldHVwKCk7XG5cblxuXG4gICAgfSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuICAgIC5jb250cm9sbGVyKCdsb2dpbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIGF1dGgsICRsb2NhdGlvbiwgJHRpbWVvdXQpIHtcbiAgICAgICAgJHNjb3BlLmF1dGhGYWlsID0gZmFsc2U7XG4gICAgICAgICRzY29wZS5sb2dpbiA9IGZ1bmN0aW9uKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgICAgICAgICAgYXV0aC5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGF1dGguc3RvcmVUb2tlbihyZXMuZGF0YSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhdXRoLmdldFVzZXIoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRoLnBvc3RMb2dpbk9wcyhyZXMuZGF0YSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRoLnBvc3RMb2dpblJvdXRlSGFuZGxlcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0dpc3RzIGVycm9yJywgcmVzcG9uc2Uuc3RhdHVzLCByZXNwb25zZS5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSA0MDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5hdXRoRmFpbCA9IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkgeyAkc2NvcGUuYXV0aEZhaWwgPSBmYWxzZTsgfSwgMzAwMCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5maW5hbGx5KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImZpbmFsbHkgZmluaXNoZWQgZ2lzdHNcIik7XG4gICAgICAgICAgICAgICAgfSk7XG5cblxuICAgICAgICB9XG4gICAgfSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuICAgIC5jb250cm9sbGVyKCdtYXN0ZXJDdHJsJywgZnVuY3Rpb24oJHNjb3BlLCAkcm9vdFNjb3BlLCAkcm91dGUpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJtYXN0ZXJDdHJsXCIpO1xuXG4gICAgICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbG9nZ2VkX3VzZXInKSkgeyAgICAgICAgXHRcbiAgICAgICAgICAgICRyb290U2NvcGUuY3VycmVudFVzZXIgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbG9nZ2VkX3VzZXInKVxuICAgICAgICB9XG4gICAgICAgICRzY29wZS4kb24oJ2xvZ2luJywgZnVuY3Rpb24oXywgdXNlcikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJMb2dnZWQgSW5cIik7XG4gICAgICAgICAgICAkc2NvcGUuY3VycmVudFVzZXIgPSB1c2VyXG4gICAgICAgICAgICAkcm9vdFNjb3BlLmN1cnJlbnRVc2VyID0gdXNlclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2xvZ2dlZF91c2VyJywgJHJvb3RTY29wZS5jdXJyZW50VXNlci51c2VybmFtZSlcbiAgICAgICAgfSlcbiAgICB9KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gICAgLmNvbnRyb2xsZXIoJ25hdkN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIGF1dGgsICRsb2NhdGlvbikgeyAgICAgICAgXG4gICAgICAgICRzY29wZS5sb2dvdXQgPSBmdW5jdGlvbigpIHsgICAgICAgICAgICBcbiAgICAgICAgICAgIGF1dGgubG9nb3V0KCkgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgfVxuICAgIH0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdyZWdpc3RlckN0cmwnLGZ1bmN0aW9uKCRzY29wZSxhdXRoLCRsb2NhdGlvbil7XG5cdCRzY29wZS5yZWdpc3RlciA9IGZ1bmN0aW9uKG5hbWUsdXNlcm5hbWUscGFzc3dvcmQpe1xuXHRcdGF1dGgucmVnaXN0ZXIobmFtZSx1c2VybmFtZSxwYXNzd29yZClcblx0XHQudGhlbihmdW5jdGlvbihyZXNwb25zZSl7XHRcdFx0XG5cdFx0XHRhdXRoLmxvZ2luKHVzZXJuYW1lLHBhc3N3b3JkKVxuXHRcdFx0JHNjb3BlLiRlbWl0KCdsb2dpbicscmVzcG9uc2UuZGF0YSlcblx0XHRcdCRsb2NhdGlvbi5wYXRoKCcvaG9tZScpXG5cdFx0fSlcblx0XHQuY2F0Y2goZnVuY3Rpb24gKGVycil7XG5cdFx0XHRjb25zb2xlLmxvZyhlcnIpXG5cdFx0fSlcblx0fVxuXG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29uZmlnKGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIsJGxvY2F0aW9uUHJvdmlkZXIpe1xuIFxuICAgICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy8nKTtcbiBcbiAgICAkc3RhdGVQcm92aWRlclxuICAgIC5zdGF0ZSgnYXBwJyx7XG4gICAgICAgIHVybDogJy8nLFxuICAgICAgICB2aWV3czoge1xuICAgICAgICAgICAgJ2hlYWRlcic6IHtcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9uYXYuaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ25hdkN0cmwnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2NvbnRlbnQnOiB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbG9naW4uaHRtbCcgLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdsb2dpbkN0cmwnXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KVxuXG4gICAgLnN0YXRlKCdhcHAubG9naW4nLHtcbiAgICAgICAgdXJsOiAnbG9naW4nLFxuICAgICAgICB2aWV3czoge1xuICAgICAgICAgICAgJ2hlYWRlcic6IHtcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJy9uYXYuaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ25hdkN0cmwnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2NvbnRlbnQnOiB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICcvbG9naW4uaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ2xvZ2luQ3RybCdcblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSlcbiBcbiAgICAuc3RhdGUoJ2FwcC5yZWdpc3RlcicsIHtcbiAgICAgICAgdXJsOiAncmVnaXN0ZXInLFxuICAgICAgICB2aWV3czoge1xuICAgICAgICAgICAgJ2NvbnRlbnRAJzoge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAncmVnaXN0ZXIuaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ3JlZ2lzdGVyQ3RybCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuIFxuICAgIH0pXG4gXG4gICAgLnN0YXRlKCdhcHAuaG9tZScsIHtcbiAgICAgICAgdXJsOiAnaG9tZScsXG4gICAgICAgIHZpZXdzOiB7XG4gICAgICAgICAgICAnY29udGVudEAnOiB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICd1c2Vycy9ob21lLmh0bWwnLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdob21lQ3RybCdcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuIFxuICAgIH0pXG5cbiAgICAgLnN0YXRlKCdhcHAuaG9tZS52ZWhpY2xlcycsIHtcbiAgICAgICAgdXJsOiAnL3ZlaGljbGVzL25ldycsXG4gICAgICAgIHZpZXdzOiB7XG4gICAgICAgICAgICAnY29udGVudEAnOiB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICd2ZWhpY2xlcy9uZXdWZWhpY2xlLmh0bWwnLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdWZWhpY2xlc05ld0luZm9DdHJsJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gXG4gICAgfSlcblxuICAgICAuc3RhdGUoJ2FwcC5ob21lLmRldGFpbHMnLCB7XG4gICAgICAgIHVybDogJy92ZWhpY2xlcy86aWQnLCAgICAgICAgXG4gXG4gICAgICAgIHZpZXdzOiB7XG4gICAgICAgICAgICAnY29udGVudEAnOiB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICd2ZWhpY2xlcy9lZGl0VmVoaWNsZS5odG1sJyxcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnVmVoaWNsZXNFZGl0SW5mb0N0cmwnICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuIFxuICAgIH0pXG5cbiAgICAgLnN0YXRlKCdhcHAuaG9tZS5tYXAnLCB7XG4gICAgICAgIHVybDogJy92ZWhpY2xlcy9tYXAvOmlkJywgICAgICAgIFxuIFxuICAgICAgICB2aWV3czoge1xuICAgICAgICAgICAgJ2NvbnRlbnRAJzoge1xuICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAndmVoaWNsZXMvbWFwVmVoaWNsZS5odG1sJyxcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAnVmVoaWNsZXNFZGl0TWFwQ3RybCcgICAgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gXG4gICAgfSlcblxuXG4gICAgXG4gXG4gICAgJGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpXG4gXG59KTtcblxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4gICAgLnNlcnZpY2UoJ2F1dGgnLCBmdW5jdGlvbigkaHR0cCwgJHdpbmRvdywgJGxvY2F0aW9uLCAkcm9vdFNjb3BlKSB7XG5cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZ2V0VXNlcjogZ2V0VXNlcixcbiAgICAgICAgICAgIGxvZ2luOiBsb2dpbixcbiAgICAgICAgICAgIHJlZ2lzdGVyOiByZWdpc3RlcixcbiAgICAgICAgICAgIGxvZ291dDogbG9nb3V0LFxuICAgICAgICAgICAgc3RvcmVUb2tlbjogc3RvcmVUb2tlbixcbiAgICAgICAgICAgIGlzTG9nZ2VkOiBpc0xvZ2dlZCxcbiAgICAgICAgICAgIHBvc3RMb2dpbk9wczogcG9zdExvZ2luT3BzLFxuICAgICAgICAgICAgcG9zdExvZ2luUm91dGVIYW5kbGVyOiBwb3N0TG9naW5Sb3V0ZUhhbmRsZXJcblxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZ2V0VXNlcigpIHtcbiAgICAgICAgICAgIHJldHVybiAkaHR0cC5nZXQoJ2FwaS91c2VycycpXG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBsb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpIHtcblxuICAgICAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJ2FwaS9zZXNzaW9ucycsIHtcbiAgICAgICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsXG4gICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gcmVnaXN0ZXIobmFtZSwgdXNlcm5hbWUsIHBhc3N3b3JkKSB7XG5cbiAgICAgICAgICAgICByZXR1cm4gJGh0dHAucG9zdCgnYXBpL3VzZXJzJywge1xuICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxuICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG5cbiAgICAgICAgZnVuY3Rpb24gbG9nb3V0KCkge1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3VzZXJfdG9rZW4nKTtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCdsb2dnZWRfdXNlcicpO1xuICAgICAgICAgICAgZGVsZXRlICRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWyd4LWF1dGgnXVxuICAgICAgICAgICAgJHJvb3RTY29wZS5pc0xvZ2dlZCA9IGZhbHNlO1xuICAgICAgICAgICAgJHJvb3RTY29wZS5jdXJyZW50VXNlciA9IG51bGw7XG4gICAgICAgICAgICAkbG9jYXRpb24ucGF0aChcIi9sb2dpblwiKVxuXG5cblxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc3RvcmVUb2tlbihyZXMsIGNiKSB7XG4gICAgICAgICAgICAkd2luZG93LnNlc3Npb25TdG9yYWdlW1widXNlcl90b2tlblwiXSA9IHJlc1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXJfdG9rZW4nLCByZXMpO1xuICAgICAgICAgICAgJGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ3gtYXV0aCddID0gJHdpbmRvdy5zZXNzaW9uU3RvcmFnZS51c2VyX3Rva2VuXG4gICAgICAgICAgICBpZiAoY2IgJiYgKHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJykpIHtcbiAgICAgICAgICAgICAgICBjYigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaXNMb2dnZWQoKSB7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHBvc3RMb2dpbk9wcyhyZXMsIGNiKSB7XG5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJHJvb3RTY29wZS5jdXJyZW50VXNlciA9IHJlcy5uYW1lXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbG9nZ2VkX3VzZXInLCAkcm9vdFNjb3BlLmN1cnJlbnRVc2VyKVxuICAgICAgICAgICAgJHJvb3RTY29wZS5pc0xvZ2dlZCA9IHRydWU7XG4gICAgICAgICAgICBpZiAoY2IgJiYgKHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJykpIHtcbiAgICAgICAgICAgICAgICBjYigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBwb3N0TG9naW5Sb3V0ZUhhbmRsZXIoKSB7XG4gICAgICAgICAgICBpZiAoJHJvb3RTY29wZS5pbnRlbmRlZFJvdXRlKSB7XG4gICAgICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJHJvb3RTY29wZS5pbnRlbmRlZFJvdXRlKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy9ob21lJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG5cbiAgICB9KVxuIiwiXG5hbmd1bGFyLm1vZHVsZSgnYXBwJylcbiAgICAuc2VydmljZSgncHJvZ25pdG9yJywgZnVuY3Rpb24oJGh0dHAsICR3aW5kb3csICRsb2NhdGlvbiwgJHJvb3RTY29wZSkge1xuXG4gICAgICAgIHJldHVybiB7XG5cblxuICAgICAgICAgICAgc2V0U2V0dXBQcm9jZXNzOiBmdW5jdGlvbigkc2NvcGUpIHtcbiAgICAgICAgICAgICAgICAkc2NvcGUubG9hZGluZyA9IGZhbHNlO1xuXG4gICAgICAgICAgICAgICAgJHNjb3BlLnNldHVwID0gZnVuY3Rpb24oY2FsbGJhY2tGbikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoJHNjb3BlLmxvYWRpbmcpIHJldHVybjtcblxuICAgICAgICAgICAgICAgICAgICAkc2NvcGUubG9hZGluZyA9IHRydWU7XG5cblxuICAgICAgICAgICAgICAgICAgICAkaHR0cC5nZXQoJHNjb3BlLmFwaVVyaSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyczogJHNjb3BlLmZpbHRlcnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvcnRpbmdzOiAkc2NvcGUuc29ydGluZ3MsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpdGg6ICRzY29wZS53aXRoLFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2U6ICRzY29wZS5zdGF0ZS5wYWdlTnVtLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfZm9ybWF0OiAnZGVmYXVsdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9wZXJfcGFnZTogJHNjb3BlLnN0YXRlLnBlclBhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9wYWdpbmF0aW9uOiAkc2NvcGUuX3BhZ2luYXRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oZGF0YSkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnN0YXRlLmxhc3RQYWdlID0gZGF0YS5sYXN0X3BhZ2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmlzTGFzdFBhZ2UgPSAoJHNjb3BlLnN0YXRlLnBhZ2VOdW0gPT0gJHNjb3BlLnN0YXRlLmxhc3RQYWdlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjYWxsYmFja0ZuICE9PSB1bmRlZmluZWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrRm4oZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLnN0YXR1cyA9PSA0MDQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJvb3RTY29wZS4kYnJvYWRjYXN0KCdyZW5kZXI0MDQnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9LFxuXG5cbiAgICAgICAgICAgIHJ1bjogZnVuY3Rpb24oJHNjb3BlKSB7XG5cbiAgICAgICAgICAgICAgICB0aGlzLnNldFNldHVwUHJvY2Vzcygkc2NvcGUpO1xuXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuXG5cbiAgICB9KVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
