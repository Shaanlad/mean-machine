angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","$rootScope",function(o,e){o.$on("login",function(n,t){o.currentUser=t,e.currentUser=t,localStorage.setItem("logged_user",e.currentUser.username)})}]),angular.module("app").controller("ErrorCtrl",["$scope","$rootScope",function(o,e){o.hello="this is from the controller hello",console.log(o.hello)}]),angular.module("app").controller("HomeCtrl",["$scope","$http",function(o,e){o.setup=function(){e.get("/api/vehicle").then(function(e){o.model=e.data},function(o){})},o.setup()}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(o,e,n){o.login=function(t,l){e.login(t,l).then(function(e){console.log("printing response"),console.log(e.data),o.$emit("login",e.data),n.path("/home")})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(o,e){e.fetch().success(function(e){o.posts=e}),o.addPost=function(){o.postBody&&e.create({body:o.postBody}).success(function(e){o.postBody=null})},o.$on("ws:new_post",function(e,n){o.$apply(function(){o.posts.unshift(n)})})}]),angular.module("app").service("PostsSvc",["$http",function(o){this.fetch=function(){return o.get("/api/posts")},this.create=function(e){return o.post("/api/posts",e)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(o,e,n){o.register=function(t,l,r){e.register(t,l,r).then(function(e){o.$emit("login",e.data),n.path("/home")})["catch"](function(o){console.log(o)})}}]),angular.module("app").config(["$routeProvider","$locationProvider",function(o,e){o.when("/",{controller:"LoginCtrl",templateUrl:"/login.html"}).when("/posts",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/home",{controller:"HomeCtrl",templateUrl:"users/home.html"}).when("/vehicles/new/info",{controller:"VehiclesNewInfoCtrl",templateUrl:"vehicles/new/info.html"}).when("/vehicles/edit/:deviceId/info",{controller:"VehiclesEditInfoCtrl",templateUrl:"vehicles/edit/info.html"}).when("/401",{controller:"ErrorCtrl",templateUrl:"errors/401.html"}),e.html5Mode(!0)}]),angular.module("app").service("UserSvc",["$http","$window","$location",function(o,e,n){var t=this;t.getUser=function(){return o.get("api/users")},t.login=function(l,r){return o.post("api/sessions",{username:l,password:r}).then(function(n){return t.token=n.data,e.sessionStorage.user_token=JSON.stringify(t.token),o.defaults.headers.common["x-auth"]=n.data,t.getUser()})["catch"](function(o){console.error("Gists error",o.status,o.data),n.path("/401")})["finally"](function(){console.log("finally finished gists")})},t.register=function(e,n,l){return o.post("api/users",{name:e,username:n,password:l}).then(function(o){return t.login(n,l)})}}]),angular.module("app").run(["$rootScope","$timeout",function(o,e){!function n(){var t="ws://localhost:3000",l=new WebSocket(t);l.onclose=function(o){console.log("WebSocket Disconnected......"),e(n,1e4)},l.onmessage=function(e){console.log(e);var n=JSON.parse(e.data);o.$broadcast("ws:"+n.topic,n.data)}}()}]),angular.module("app").controller("VehiclesEditInfoCtrl",["$scope","$http","$location",function(o,e,n){o.saveVehicleDetails=function(){console.log("in controller 2"),console.log(o.dev_id+o.v_number),e.post("/api/vehicle",{dev_id:o.dev_id,v_number:o.v_number,driver_name:o.driver_name,sos_number:o.sos_number}).then(function(o){console.log(o),n.path("/home")},function(o){console.log(o)})}}]),angular.module("app").controller("VehiclesNewInfoCtrl",["$scope","$http","$location",function(o,e,n){o.saveVehicleDetails=function(){console.log("in controller 2"),console.log(o.dev_id+o.v_number),e.post("/api/vehicle",{dev_id:o.dev_id,v_number:o.v_number,driver_name:o.driver_name,sos_number:o.sos_number}).then(function(o){console.log(o),n.path("/home")},function(o){console.log(o)})}}]);
//# sourceMappingURL=data:application/json;base64,