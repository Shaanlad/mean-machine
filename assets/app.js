angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(o){o.$on("login",function(t,n){o.currentUser=n})}]),angular.module("app").controller("HomeCtrl",["$scope",function(o){o.hello="hello"}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc","$location",function(o,t,n){o.login=function(e,r){t.login(e,r).then(function(t){console.log("printing response"),console.log(t.data),o.$emit("login",t.data),n.path("/home")})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(o,t){t.fetch().success(function(t){o.posts=t}),o.addPost=function(){o.postBody&&t.create({body:o.postBody}).success(function(t){o.postBody=null})},o.$on("ws:new_post",function(t,n){o.$apply(function(){o.posts.unshift(n)})})}]),angular.module("app").service("PostsSvc",["$http",function(o){this.fetch=function(){return o.get("/api/posts")},this.create=function(t){return o.post("/api/posts",t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc","$location",function(o,t,n){o.register=function(e,r){t.register(e,r).then(function(t){o.$emit("login",t.data),n.path("/home")})["catch"](function(o){console.log(o)})}}]),angular.module("app").config(["$routeProvider",function(o){o.when("/",{controller:"LoginCtrl",templateUrl:"login.html"}).when("/posts",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/home",{controller:"HomeCtrl",templateUrl:"home.html"})}]),angular.module("app").service("UserSvc",["$http","$window",function(o,t){var n=this;n.getUser=function(){return o.get("api/users")},n.login=function(e,r){return o.post("api/sessions",{username:e,password:r}).then(function(e){return n.token=e.data,t.sessionStorage.user_token=JSON.stringify(n.token),o.defaults.headers.common["x-auth"]=e.data,n.getUser()})},n.register=function(t,e){return o.post("api/users",{username:t,password:e}).then(function(o){return n.login(t,e)})}}]),angular.module("app").run(["$rootScope","$timeout",function(o,t){!function n(){var e="ws://localhost:3000",r=new WebSocket(e);r.onclose=function(o){console.log("WebSocket Disconnected......"),t(n,1e4)},r.onmessage=function(t){console.log(t);var n=JSON.parse(t.data);o.$broadcast("ws:"+n.topic,n.data)}}()}]);
//# sourceMappingURL=data:application/json;base64,